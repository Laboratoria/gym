{"pageProps":{"post":{"title":"Mutual Recursion","slug":"mutual-recursion","content":"<h1>Mutual Recursion</h1>\n<p><a href=\"https://www.codewars.com/kata/53a1eac7e0afd3ad3300008b/train/javascript\">https://www.codewars.com/kata/53a1eac7e0afd3ad3300008b/train/javascript</a></p>\n<p>La recursividad mutua nos permite divertirnos con la recursividad regular\n(donde una función se llama a sí misma hasta una condición de terminación)\ny aplicarla a múltiples funciones que se llaman entre sí!</p>\n<p>Usemos las secuencias de Hofstadter para demostrar esta técnica.\nCrearas dos funciones <code>F</code> y <code>M</code> de modo que las siguientes ecuaciones sean verdaderas:</p>\n<pre><code class=\"language-sh\">F(0) = 1\nM(0) = 0\nF(n) = n - M(F(n - 1))\nM(n) = n - F(M(n - 1))\n</code></pre>\n<blockquote>\n<p><strong>Importante</strong> ❗\nNo se preocupe por los números negativos, <code>n</code> siempre será mayor o igual a cero.</p>\n</blockquote>\n<p>Referencia de Hofstadter <a href=\"http://en.wikipedia.org/wiki/Hofstadter_sequence#Hofstadter_Female_and_Male_sequences\">http://en.wikipedia.org/wiki/Hofstadter_sequence#Hofstadter_Female_and_Male_sequences</a></p>\n<h2>Objetivos de aprendizaje (OAs)</h2>\n<ul>\n<li>Recursividad</li>\n</ul>\n","projects":["cipher","card validation"],"OAs":["strings","arrays"]}},"__N_SSG":true}