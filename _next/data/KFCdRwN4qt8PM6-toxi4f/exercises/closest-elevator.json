{"pageProps":{"post":{"title":"Closest Elevator","slug":"closest-elevator","content":"<h1>Closest Elevator</h1>\n<p><a href=\"https://www.codewars.com/kata/5c374b346a5d0f77af500a5a/train/javascript\">https://www.codewars.com/kata/5c374b346a5d0f77af500a5a/train/javascript</a></p>\n<p>Dados 2 ascensores (llamados \"left\" y \"right\") en un edificio de 3 pisos\n(numerados del <code>0</code> al <code>2</code>), escriba una función <code>elevator</code>\nque acepte tres argumentos (en orden):</p>\n<ul>\n<li><code>left</code> - el piso actual del ascensor <code>left</code></li>\n<li><code>right</code> - el piso actual del ascensor <code>right</code></li>\n<li><code>call</code> - el piso desde el cual se llamó al ascensor</li>\n</ul>\n<p>La función deberá retornar cual es el ascensor más cercano al piso\ndel cual se llamó al ascensor (<code>\"left\"</code> / <code>\"right\"</code>).</p>\n<p>En el caso donde ambos ascensores sean equidistantes del piso,\nse deberá elegir el ascensor <code>right</code>.</p>\n<p>Puedes asumir que los argumentos siempre serán números enteros entre 0 y 2.</p>\n<p>Ejemplos:</p>\n<pre><code class=\"language-js\">elevator(0, 1, 0); // => \"left\"\nelevator(0, 1, 1); // => \"right\"\nelevator(0, 1, 2); // => \"right\"\nelevator(0, 0, 0); // => \"right\"\nelevator(0, 2, 1); // => \"right\"\n</code></pre>\n"}},"__N_SSG":true}