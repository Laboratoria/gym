{"pageProps":{"post":{"title":"React challenge 1","slug":"react-challenge-1","content":"<h1>React challenge 1</h1>\n<p>En este\n<a href=\"https://codesandbox.io/s/react-challenge-1-exercise-16zvut\">codesandbox</a>\nencontrarás un <em>boilerplate</em> de una <em>todo app</em>.</p>\n<p>Deberás completar el código para que la funcionalidad final sea como la que se\nmuestra en la siguiente animación:</p>\n<p><img src=\"./react_challenge_1.gif\" alt=\"React challenge 1\" title=\"React challenge 1\"></p>\n<h2>Pistas</h2>\n<ol>\n<li>\n<p>Lee el código y entiende cúal es la responsabilidad de cada componente.</p>\n</li>\n<li>\n<p>En el componente <em>ToDoApp</em>, ¿qué estado almacena el listado de todos?\n¿qué prop pasarias al componente <em>AddToDo</em> para que pueda agregar items\nal listado?</p>\n</li>\n<li>\n<p>En el componente <em>AddToDo</em>, ¿cómo implementarías la función\n<em>addToDoAction</em> para que agregue el parámetro <em>newItem</em> al estado\n<em>todoList</em> del padre?</p>\n</li>\n<li>\n<p>En el componente <em>ToDoList</em> ¿cómo implementarías la función\n<em>updateToDoState</em> ? Te sugerimos que esta función:</p>\n<ol>\n<li>Encuentre en el prop <em>list</em> el item identificado\ncon el <em>id</em> entregado como parámetro</li>\n<li>Del item encontrado actualice la llave <em>done</em></li>\n<li>Actualice estado <em>todoList</em> del padre</li>\n</ol>\n</li>\n</ol>\n","projects":["data-lovers","memory-match"],"OAs":["jsx","components","events","lists-and-keys","conditional-rendering","hooks"]}},"__N_SSG":true}