{"pageProps":{"post":{"title":"Transformation iteration","slug":"transformation-iteration","content":"<h1>Transformation iteration</h1>\n<p><a href=\"https://www.codewars.com/kata/5872d59caa042821100001f8/train/javascript\">https://www.codewars.com/kata/5872d59caa042821100001f8/train/javascript</a></p>\n<p>Escribe una función que reciba dos cadenas como parámetros e iteralas para\ntrasformar la cadena <code>source</code> y termine convertida en la cadena <code>target</code> el\nresultado de cada iteración guardalo en un arreglo.</p>\n<p><strong>Ejemplos</strong></p>\n<pre><code class=\"language-js\">transform('car','see') ➞ [\"car\", \"sar\", \"ser\", \"see\"]\ntransform('casa','buho') ➞ [\"casa\", \"basa\", \"busa\",\"buha\",\"buho\"]\ntransform('floor','brake') ➞ [\"floor\", \"bloor\", \"broor\", \"braor\", \"brakr\", \"brake\"]\ntransform('kata','math') ➞ [\"kata\", \"mata\", \"math\"]\n</code></pre>\n<blockquote>\n<p><strong>Importante</strong> ❗</p>\n<ul>\n<li>Deberás retornar un array con los strings correspondientes a cada iteración</li>\n<li><code>source</code> y <code>target</code> siempre tendrán la misma longitud</li>\n<li>Si una letra  de <code>source</code> coincide al momento de iterar con otra letra de <code>target</code>\nentonces no hay transformación de letras</li>\n</ul>\n</blockquote>\n","projects":["cipher","card validation"],"OAs":["strings","arrays"]}},"__N_SSG":true}