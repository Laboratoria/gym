{"pageProps":{"post":{"title":"Mutual Recursion","slug":"roman-to-integer","content":"<h1>Mutual Recursion</h1>\n<h2>Roman to Integer</h2>\n<p><a href=\"https://leetcode.com/problems/roman-to-integer/\">https://leetcode.com/problems/roman-to-integer/</a></p>\n<p>Los números romanos son representados por 7 símbolos diferentes: <code>I</code>, <code>V</code>, <code>X</code>,\n<code>L</code>, <code>C</code>, <code>D</code> y <code>M</code></p>\n<p>| <strong>Symbol</strong>   |    <strong>Value</strong> |\n| -- | -- |\n|I  |                1|\n|V  |                5|\n|X  |               10|\n|L  |               50|\n|C  |               100|\n|D  |               500|\n|M  |               1000|</p>\n<p>Por ejemplo, 2 es escrito como <code>II</code> en números romanos, solo dos unos son añadidos.\n<code>12</code> es escrito como <code>XII</code>, el cual es simple <code>X</code> + <code>II</code>. El numero 27 es escrito\ncomo <code>XXVII</code>, el cual es <code>XX</code> + <code>V</code> + <code>II</code>.</p>\n<p>Los números romanos son usualmente escritos del mas alto al mas bajo de izquierda\na derecha. Sin embargo, para el numero cuatro no es <code>IIII</code>. En su lugar, el numero\ncuatro es escrito como <code>IV</code>. Porque el uno esta antes de el cinco lo substraemos\npara que sea cuatro. El mismo principio aplica para el numero nueve, el cual es escrito\ncomo <code>IX</code>. Hay seis instancia donde la sustracción es usada:</p>\n<ul>\n<li><code>I</code> puede ser colocado antes de <code>V</code> (5) y <code>X</code> (10) para hacerlo 4 y 9.</li>\n<li><code>X</code> puede ser colocado antes de <code>L</code> (50) y <code>C</code> (100) para hacerlo 40 y 90.</li>\n<li><code>C</code> puede ser colocado antes de <code>D</code> (500) y <code>M</code> (1000) para hacerlo 400 y 900.</li>\n</ul>\n<p>Dado un numero romano, conviértelo a un numero entero.</p>\n<p><strong>Ejemplo 1</strong></p>\n<pre><code class=\"language-js\">Entrada: s = \"III\"\nSalida: 3\n</code></pre>\n<p><strong>Ejemplo 2</strong></p>\n<pre><code class=\"language-js\">Entrada: s = \"IV\"\nSalida: 4\n</code></pre>\n<p><strong>Ejemplo 3</strong></p>\n<pre><code class=\"language-js\">Entrada: s = \"IX\"\nSalida: 9\n</code></pre>\n<p><strong>Ejemplo 4</strong></p>\n<pre><code class=\"language-js\">Entrada: s = \"LVIII\"\nSalida: 58\nExplicación: L = 50, V= 5, III = 3.\n</code></pre>\n<p><strong>Ejemplo 4</strong></p>\n<pre><code class=\"language-js\">Entrada: s = \"MCMXCIV\"\nSalida: 1994\nExplicación: M = 1000, CM = 900, XC = 90 and IV = 4.\n</code></pre>\n<blockquote>\n<p><strong>Importante</strong> ❗</p>\n<ul>\n<li><code>1 &#x3C;= s.length &#x3C;= 15</code></li>\n<li><code>s</code> contiene solo los caracteres <code>('I', 'V', 'X', 'L', 'C', 'D', 'M')</code>.</li>\n<li>Esta <strong>garantizado</strong> que <code>s</code> es un numero romano valido en el rango <code>[1, 3999]</code>.</li>\n</ul>\n</blockquote>\n","projects":["cipher","card validation"],"OAs":["strings","arrays"]}},"__N_SSG":true}